
namespace Day3_GearRatios;

internal class Program
{
    static void Main(string[] args)
    {
        var input = ".....489............................152....503.........................180......200.........147.......13.......................239..........\n......*.....186.48....681...732........*..................935.........*.....................*......................512............*..874....\n..806.540......*.........*............249......904...358....*......957..867..863..........857.....264..............@....89=......97..*......\n......................793........................*...=.....142...........*..*....%...................@......+...............36.......547....\n...........=335..............906*634..932........201...157.............423..72..103.798.......732........161...............*................\n..........................*..........*....662.................88....................$..............=........................439.126...269...\n...905&...74.............795...128...872....*....*.....521.........../......806&.........456.....93..869.........168..............*.........\n........../..=662.824.........+............863..47........-.700.....437..........316..........................96.*......348*632....138.$932.\n........-..........*.......................................................465....*.........243......&........*...94..+..........*..........\n..41...532.......511.....-......$........&....216.................................330...715..../...309........415.....388.....873.287.265...\n....*...................338...496.......18......*............48........873................@.............493.................................\n..849.............................136.#......787.........787..$....152..*........187..../.....738......*....................&85..960...749..\n..............395.................*...478...........................*....860.......*...613./.........194........................*.....%.....\n.....+799.........132..188........691..........689/...176..........274........569..840.....8....#........................451...71...........\n..............93..&....*........@........#..................892..............................275.....862*180../.....355..*.............796..\n.......400......*......676.....342.......930...389...925.......*...........580..3......395....................27....*....888..........#.....\n.....%......205..888................60...........=..*.......540........742.*..........*.......858..................589.......679..490.......\n...462..125*....................691..@.221=.........28...................*..31.615..827..............876...................-.........*762...\n.............501............$..=...............*.........&.............842......@.......308................601...........546................\n......428...*.............417.....760....25.....809......119.......................589.../.........610......../..%256...................858.\n......*...623...186................*......*..........895.......................$......#...........@...................337........285........\n....626.#......@.....787.....#...........294./..........*........619..........902........924....................665..*.............*........\n.........406...............10......+..........985...+....944.....*........296................169....@....686......*..............290..767...\n.......................738..........977....*.......873.......665.381..17....%.....246....576..*...861...*.......104.....208..........=......\n.919............#...............973.....320.529................*......*.......676*.............89.......112............-....988.........858.\n....*....431..63..-646.........*........................863.649..494..896.......................................759..........+..............\n...331.....*.........../969....571.........355............*.....-.........#.....804@........-......................*...875......68..........\n........558..412.............................*....758..272..............207..............466..........245.......664...@...........*..447....\n...............*..-368.......................345./.........%..@....450..........................175......*.%...............106...44.@.......\n........*290...........10...323..........................318..664...+..470....-...@...../718.......$...986..571.............*...............\n.....148......387/.....%...=....287........=784.........................*..580....260...............................440....377..-......316..\n................................&........................$....../840....................708......../.......149..................849.........\n....613..........926.......-......951....*.......185..62..265...........................-....@783...479........531..................302.....\n.89...&.....237.........949...........561.211...*......*......689...&.......@..412.......................214......*.........334.590....*908.\n...*......../.....454........245.781.............649.489..560...-..109.....27....*.........511..............*....567....495*......*./.......\n..502...36....285...#.441...+.......*.....................&............246...........@.....*...........-929.165.................338..581....\n.......+.................*......324..846..................................=....974...979..778....981...................174.811*.............\n...............*........752.701..*............76.....985.....@...588.&278..........................-................=./........720....371...\n....319.606...566..../........+...63..........*........=....543...$..............................%.............3..64........................\n......$............472..................107.129............................818........&724....454..378..........#....978.........210@.......\n..............................*295......*.......................803*143.......*.......................*.................*395.............489\n...........974...959=......772.........646..........752....=.................165.........+...305.......331..............................*...\n..243%........*.......169/.........66......#............554.............@..............48...................616....981..117........113.45...\n...........694....685......312......*.......94......840.........487.....519.655......................$365..*............*............*......\n........#......#....*..............541.960.............*..........*............-....758*...................636.......868...............%....\n.........400....538..454.@............../......138....402.....775.959...................210.990......%...................338*33.......585...\n....891...................278........*........*................*...........=................-...997.43....@.................................\n...................................76.182..775...107..........536.......302.......982.883......$.......650..........470...988...............\n...810.......694....757*842.........................*..................................-.......................956.....*.....*173...........\n............................223......212..427......748...593......554*528...462...........-.....569........67.....*....620..................\n.....349.....461....=........*.../....=......%.673.....#....*560........................694.534.*.........=......661............326...123...\n.879.#.......*....610...#.357..398.............*....933.............555.........45*..........*............................477....*.....*....\n...*.....12..240......164.............862.......17...........650...................627...40.347...640........448.#583.340.......253.918.....\n...913....*......425@......492=....&....-...931.............=....220..........................................+............288..............\n.........999....................447.........*.....222...360.............124-........+....................596........574...........233*543...\n..............234...215..793.............492.......#......%.=....255.........613...75.............754....../...........=......./............\n..............*....#.........................52.............226....*....750..............631....@.............678..............671...741....\n..298-...5..158...........%307......+........+........165*..........836....$............*.......159..938.......*...%.....644................\n....................................839...................131..................+.......210..872.........*...121..818.....*....252.........99\n......139.....609...............................%...720..................607=...407.........*...........962..............395.........359....\n.989..*..........-..........-....506....359..465......*........*288..........................324...368#.....%..602..551..................922\n.....282.................989....*......*.........52....818..834........693.689.............................845.#.......*......158...&.......\n.../.....357....410....*.....128.....153........*.....................*......*.....................656.915............267....*......234.155.\n229........*......+...488..&....................689.....71.....331..209.....521..305..365.95..........*......................35.........=...\n............355...........126.794*599.....................*....../..................$.......&.328...........659.........527.....252.........\n.869................675....................923@......*.....293.=.....342..............466........*.........*...................-....&857....\n...................*.............364..............827.191.......631..*......=......@..............492....615...............921..............\n............172..124...142.966........*591..........................337....852....103..*275...+..............................*.........647..\n.....233....*..........*...........172.................276...672............................132.....&............764*607...693...411........\n.......*..919...301.563.................71../......73...*..../.........170......973..74*............474............................/........\n647.405.................321.479...........*.980......*....................*.............563..877...........934.......449..701-..............\n...........................*............555...........727........328.......521...................#562........*..357.=..........893..........\n611..561......400..............&...........................700.....................570.494....63............165..=.....481......*...........\n...*.*..........=.525......317.277...............738*596......*139....528...@475....*....*......*.........*............*.........62.........\n186..149..........*.../...............357...504*....................=....*........212.....235....125...173.253..../.....992.975*............\n..........430...770....20....865......*.........705....904..-........941..216.....................................275...........763.405.....\n.........&.........................362......#..........*.....646................258.....898....241....................*..............*......\n....13.....510...935...........367..........546....98.869........217.....................*....*....431...566.........152..............69....\n...%................*.......$...-.......213.......*.........%..........683............#..265................../866...............161........\n.........962...938...259..290......177....=.......948........582........+..843.......584.........%680..782%................./437........657.\n797/.388*........*..................*........627.........................../.............897..........................@.................*...\n.................848......-..724....76.........&..........228.335...912*.................*................122.......149..828..........289...\n.......................748..*.........................722.......$.....................774...431&.........................*....739..=........\n...80...935.*621.............57......#...........484...$.......................380.72............599%..670.............233......*..26.......\n.........+........................812...$..........*...............259*470......*...%..408..............*..251....618........356............\n...............*381...726...............972.109..260.....934.%878................92.....*...760......926..*..........*66....................\n..703.......592............384.......................433..=..................814......764........809......636...534...........$.......944...\n.....*..275.....................83.........623...695..*............516..30.....$.................&...............*.............507....*.....\n...254...*......#...74............%.............*....496.9.........*........................727....335...662......473...530$..........942...\n.......420.......66.*....679.332@...413..........417......*..188.609....908......*587........%........&.....&.411...............640.........\n...382.....462......871...*.............951...............25..............-...860................604............*....699..814....*..........\n....&.......#..............574........................................................503.723*......$.....-...527...*.......*.683....249.395\n..............781............................21.....721*206.990.97...............87...........971......273..........951..736........*.......\n.............*..........948..808..158..........%...............*................&......*537.......................=............-....529.....\n164*....18..753............/..*............................96.......................316........382........946...685.........455.............\n....672...........*205.........695...........................$...279....#625....138..................115....*.........566..........410......\n...............605.....17.............705..$177.......424...........*.........................737......*...297...........-..................\n..780..............858*........24.......$.............*.......+......432.........................*....406......137..779*...$...695..........\n....%.%192..........................734...860.........160...562..62........362.....896%........42..............*..........265.$.............\n............107/.......719..983............*..............................%.........................................................997.....\n..........................*....*377...118...589..................926...&.......11........501.......$............490..996..*.............%...\n.........../....769........210........*................999......@.....372.11*...*.......*.....295..71......969@.-...*......223.....840..869.\n........742.....................554...148..........812....*.........+..........727....875......#........./.........857.875...........*......\n...611...........150*693...164....+........................636..327.73................................329...............*....25....747.942..\n........336...............*............808...*.....894...........*.......707*640.................538@................*...308............*...\n.........$..............#..817..424*89...&.117......../.....2..243.....................................279*143..866..458............623.170.\n.....301.......199...871..........................728......-.......742.252...876......./192........................................@........\n.......*.825..+..........284-.....271................*........418....&.......*...............+.......781-..........92#...222............%452\n....786....*.....................#.................272..................133....653.........82..................554................*156......\n............838..917-..868*492.............156...........970..............*.....*..337...............100........*..397*177.....442.....&....\n..951..........................193..........%..............*.562=......505............+....203.971...........843...........%............753.\n...*............498....754......*......562....262........668................781................*.....*621.........115.....249...............\n....470......@........*......75.227......*...*...............57+........769....+....-.......839...968.....876......*..............491.......\n..........807..297..305..883..........470...505.....245...........682......*......415....................*.........982...........&.....180..\n................*...........*.............$.........*.......205......*135.......................%.....286..............418.............$....\n....362.444.....815..........722....336...37.........283...*..............329................433..........@153..........*.....435...........\n....*......*.........237...............*.....247...........108.....906.......=......611.............................608..814.-..............\n......285.......865.*..........62.973...781.....*..982.............*......60.......$.......722......=..834.%.....85*............215.........\n........*....%.......780.996..%....*..............%..........7..855..515.+.....990........*........600...+.765............911.....*.........\n......130..932.180.......*......143.........../..............*.......*..........&..149....301................................-...77.........\n...........................272.................868............943.976................*............944.........996....71.....................\n....511...............995#..-........&.................462.............-.601...931....889.&52.............................................27\n......#...55......................807.......424..968.................738...*......$..................598-.....77...408......%.......458.....\n....................88...272*................-....../....................544.......................$.........*.........11+...313....+.......\n108............819...*.......594..883..../............215..22.....................566*799........217....197..176...721......................\n.....332.......*.....846..-.......#...157................@......454....698...622..........430........47*............................../.....\n.............194..........239..................713*331..............51*.............800.....-..600.............&479..........-........805...\n......637*.....................847...........................274.#..........594...........................533........883....722....*........\n..........61...310.12......*..........923...............174....*.299.......-................132............&.........*..........876.331.....\n...............*.....*...435.864......+.......................11.....890....................$..........%............862.....968.............\n...../......404......398..........540.....................*............$.........287....................311.....515............*............\n.....564.....................807...*...567.............985.100.....%.....................227..................$.*.........*........974.156..\n..............156.953...........$........$.....................695.329..................=.............836..176..128....864..216#....*.......\n.767-...#.......%....*741...........-169........452/............*.............+...........174.....813....*..........%..............230......\n........17...............................159..........377=....659..........725....$......*........$...971.........907.766...................\n...............408.914........788...%......@...................................660.....138....333..........48..............=380...104.......\n.............$........-......*.......480...............194..*527........*....................*...............*578..961...........*..........\n...444..428..470..........128...............684.399.....*............105.680......7*583............................*.......*....53....*.....\n.....*.*...........223..........&19..........*.....*...246.....*........................526*939..........*....33..51....403..........706....\n...832..383...287.........................216....103...........710..................958...................288...............................";
        //string inputTEST = "467..114..\n...*......\n..35..633.\n......#...\n617*......\n.....+.58.\n..592.....\n......755.\n...$.*....\n.664.598..";
        Console.WriteLine(GetGearSum(input));
    }
    static int GetGearSum(string input)
    {
        var grid = GenerateGrid(input);
        int sum = 0;
        StringKeyValuePair firstNumberKeyValue = new StringKeyValuePair();
        StringKeyValuePair secondNumberKeyValue = new StringKeyValuePair();
        for (int i = 0; i < grid.GetLength(0); i++)
        {
            bool secondIsFound = false;
            for (int j = 0; j < grid.GetLength(1); j++)
            {
                if (grid[i, j] == '*')
                {
                    bool hasDigitNearby = false;
                    var xCoordinates = new int[] { -1, -1, -1, 0, 0, 1, 1, 1 };
                    var yCoordinates = new int[] { -1, 0, 1, -1, 1, -1, 0, 1 };

                    for (int k = 0; k < xCoordinates.Length; k++)
                    {
                        try
                        {
                            var x = i + xCoordinates[k];
                            var y = j + yCoordinates[k];
                            if (firstNumberKeyValue.number == string.Empty)
                            {
                                hasDigitNearby = char.IsDigit(grid[x, y]);
                                if (hasDigitNearby)
                                {
                                    firstNumberKeyValue = BuildNumberFromDigitCoordinates(x, y, grid);
                                    continue;
                                }
                            }
                            else
                            {

                                if (firstNumberKeyValue.coordinates.Any(xx => xx.Key == x && xx.Value == y))
                                {
                                    continue;
                                }
                                else
                                {
                                    if (char.IsDigit(grid[x, y]))
                                    {
                                        secondNumberKeyValue = BuildNumberFromDigitCoordinates(x, y, grid);
                                        secondIsFound = true;
                                        break;
                                    }
                                }
                            }

                        }
                        catch (IndexOutOfRangeException ex) { }
                    }
                    if (secondIsFound)
                    {
                        Console.WriteLine(firstNumberKeyValue.number + " " + secondNumberKeyValue.number);
                        int multiplication = int.Parse(firstNumberKeyValue.number) * int.Parse(secondNumberKeyValue.number);
                        sum += multiplication;
                        firstNumberKeyValue.number = string.Empty;
                        secondNumberKeyValue.number = string.Empty;
                        secondIsFound = false;
                    }
                    else
                    {
                        firstNumberKeyValue.number = string.Empty;
                    }
                }
            }
        }
        return sum;
    }

    private static StringKeyValuePair BuildNumberFromDigitCoordinates(int xDigitCoordinates, int yDigitCoordinates, char[,] grid)
    {
        var leftSuffixes = new int[] { -1, -2 };
        var rightSuffixes = new int[] { 1, 2 };
        StringKeyValuePair list = new StringKeyValuePair();
        string secondNumber = grid[xDigitCoordinates, yDigitCoordinates].ToString();
        list.coordinates.Add(new KeyValuePair<int, int>(xDigitCoordinates, yDigitCoordinates));
        try
        {
            var oneLeft = grid[xDigitCoordinates, yDigitCoordinates + leftSuffixes[0]];
            var twoLeft = grid[xDigitCoordinates, yDigitCoordinates + leftSuffixes[1]];

            if (char.IsDigit(oneLeft))
            {
                list.coordinates.Add(new KeyValuePair<int, int>(xDigitCoordinates, yDigitCoordinates + leftSuffixes[0]));

                secondNumber = oneLeft.ToString() + secondNumber;
                if (char.IsDigit(twoLeft))
                {
                    list.coordinates.Add(new KeyValuePair<int, int>(xDigitCoordinates, yDigitCoordinates + leftSuffixes[1]));
                    secondNumber = twoLeft.ToString() + secondNumber;
                }
            }
        }
        catch (IndexOutOfRangeException ex) { }
        try
        {
            var oneRight = grid[xDigitCoordinates, yDigitCoordinates + rightSuffixes[0]];
            var twoRight = grid[xDigitCoordinates, yDigitCoordinates + rightSuffixes[1]];
            if (char.IsDigit(oneRight))
            {
                list.coordinates.Add(new KeyValuePair<int, int>(xDigitCoordinates, yDigitCoordinates + rightSuffixes[0]));
                secondNumber = secondNumber + oneRight.ToString();
                if (char.IsDigit(twoRight))
                {
                    list.coordinates.Add(new KeyValuePair<int, int>(xDigitCoordinates, yDigitCoordinates + rightSuffixes[1]));
                    secondNumber = secondNumber + twoRight.ToString();
                }
            }
        }
        catch (IndexOutOfRangeException ex) { }
        list.number = secondNumber;
        return list;
    }


    static bool IsDigitAtSameLevelOrLover(char c)
    {
        if (char.IsDigit(c))
            return true;
        return false;
    }


    static bool IsGearNearby(char c)
    {
        if (c == '*')
            return true;
        return false;
    }

    static int GetSumFromInput(string input)
    {
        var grid = GenerateGrid(input);

        int sum = 0;
        for (int i = 0; i < grid.GetLength(0); i++)
        {
            string number = "";
            List<KeyValuePair<int, int>> numberIndexes = new List<KeyValuePair<int, int>>();
            for (int j = 0; j < grid.GetLength(1); j++)
            {
                if (char.IsDigit(grid[i, j]))
                {
                    number += grid[i, j];
                    numberIndexes.Add(new KeyValuePair<int, int>(i, j));
                }
                else
                {
                    bool hasGoodNeighbour = false;
                    if (number != string.Empty)
                    {
                        foreach (var index in numberIndexes)
                        {
                            var x = index.Key;
                            var y = index.Value;
                            var xCoordinates = new int[] { -1, -1, -1, 0, 0, 1, 1, 1 };
                            var yCoordinates = new int[] { -1, 0, 1, -1, 1, -1, 0, 1 };
                            for (int k = 0; k < xCoordinates.Length; k++)
                            {
                                try
                                {
                                    hasGoodNeighbour = IsGoodNeighbour(grid[x + xCoordinates[k], y + yCoordinates[k]]);
                                    if (hasGoodNeighbour)
                                    {
                                        break;
                                    }
                                }
                                catch (IndexOutOfRangeException ex) { }
                            }
                            if (hasGoodNeighbour)
                            {
                                var parsedNumber = int.Parse(number);
                                Console.WriteLine(number);
                                sum += parsedNumber;
                                break;
                            }
                        }
                    }
                    numberIndexes = new List<KeyValuePair<int, int>>();
                    number = string.Empty;
                }
            }
        }
        return sum;
    }

    static bool IsGoodNeighbour(char c)
    {
        if (!char.IsDigit(c) && c != '.')
            return true;
        return false;
    }


    static char[,] GenerateGrid(string input)
    {
        string[] lines = input.Split("\n");
        string[] fixedLines = new string[lines.Length];
        int counter = 0;
        foreach (string line in lines)
        {
            var fixedline = line + ".";
            fixedLines[counter] = fixedline;
            counter++;
        }
        char[,] grid = new char[fixedLines.Length, fixedLines[0].Length];

        for (int i = 0; i < fixedLines.Length; i++)
        {
            for (int j = 0; j < fixedLines[i].Length; j++)
            {
                grid[i, j] = fixedLines[i][j];
                Console.Write(grid[i, j]);
            }
            Console.WriteLine();
        }
        return grid;
    }
}

class StringKeyValuePair
{
    public List<KeyValuePair<int, int>> coordinates = new List<KeyValuePair<int, int>>();
    public string number = "";
}
